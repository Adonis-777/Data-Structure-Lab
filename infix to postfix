#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>


char stack[100];
int top = -1;

int priority(char c){
    
    if(top == -1) return 0;
    if(c == '^') return 3;
    if(c == '*' || c == '/') return 2;
    if(c == '+' || c == '-') return 1;
}

void push(char c){
    if(top == 99){
        printf("\nStack overflow");
        exit(1);
    }
    stack[++top] = c;
}

char pop(){
    if(top == -1){
        printf("\nStack is empty");
        exit(1);
    }
    else{
        return stack[top--];
    }
}

void infixToPostfix(char* s){
    
    int n = strlen(s), k = 0;
    
    
    char postfix[100];
    for(int i = 0; i < n; i++){
        
        char c = s[i];
        
        if(isalnum(c)){
            postfix[k++] = s[i];
        }
        
        else if(c == '('){
            push(c);
        }
        
        else if(c == ')'){
            while(stack[top] != '('){
                postfix[k++] = pop();
            }
            pop();
        }
        
        
        else{
            while(top != -1 && priority(stack[top]) >= priority(c)){
                postfix[k++] = pop();
            }
            push(c);
        }
        
    }
    
    while(top != -1){
        
        postfix[k++] = pop();
        
    }
    
    postfix[k] = '\0';
    
    printf("\n%s", postfix);
    
    
    
    
}

int main() {
    
    char s[100];
    scanf("%s", s);
    infixToPostfix(s);
    
}
